name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
- name: Upload Android App to Google Play Console
  # You may pin to the exact commit or the version.
  # uses: sokchanbo/android-upload-google-play@e2829d354c73d35c802ccaf4b0385bde3137eeee
  uses: sokchanbo/android-upload-google-play@1.0.0
  with:
    # Service account file created from Google Cloud Console
    service-account: 
    # Bundle or APK file to release
    release-file: 
    # Android app package name or applicationId
    package-name: 
    # 'production', 'alpha', 'beta', 'internal'
    track: 
    # 
    mapping-file: # optional
    # Directory for release note with multi-language supported. (BCP-47 language tag)
    whatsnew-directory: # optional

    - name: Playright to Slack
  # You may pin to the exact commit or the version.
  # uses: SergeyPirogov/playwright-to-slack-action@e00c838f6c025391192fbc5f25736070f622032f
  uses: SergeyPirogov/playwright-to-slack-action@0.1.0
  with:
    # Playwright json file
    filePath: # optional, default is ./playwright-report/test-results.json
    # Github token of the repository (automatically created by Github)
    slackToken: 
    # Slack channel name
    channel: 
    - name: Azure-PlayFab Function Sync
  # You may pin to the exact commit or the version.
  # uses: rudyatkinson/azure-playfab-function-sync@7027dac7a0181b17feee974dc026e194a0ecf410
  uses: rudyatkinson/azure-playfab-function-sync@v1.1.0
  with:
    # The secret key required for register functions. You can obtain from PlayFab title.
    playfab-developer-secret-key: 
    # PlayFab title id that will be updated with function app urls.
    playfab-title-id: 
    # Subscription id which is includes function app.
    azure-subscription-id: 
    # Resource group name which is includes function app.
    azure-resource-group: 
    # The function app that will be uploaded.
    azure-function-app-name: 
    # Playfab functions which are does not contains at Azure function app will be unregistered.
    playfab-unregister-unused-functions: # optional
    # App Id that taken from azure portal is required to login with az cli in action.
    azure-login-app-id: # optional, default is 
    # Secret Value that taken from azure portal is required to login with az cli in action.
    azure-login-secret-value: # optional, default is 
    # Tenant Id that taken from azure portal is required to login with az cli in action.
    azure-login-tenant-id: # optional, default is

    - name: Internal App Sharing
  # You may pin to the exact commit or the version.
  # uses: sagar-viradiya/internal-app-sharing-action@64f6f1ddb046af97c5b67fed0dee7be0647fb1c3
  uses: sagar-viradiya/internal-app-sharing-action@v1.1.0
  with:
    # The service account json plain text private key file to authorize the upload request
    serviceAccountJsonPlainText: 
    # Package name of the application
    packageName: 
    # .apk file path
    apkFilePath: # optional
    # .aab file path
    aabFilePath: # optional
    - name: Playwright Container, forked by Orderlion
  # You may pin to the exact commit or the version.
  # uses: orderlion/playwright-container@bdfc266f9c3f7a8bf0b9a3cac9245962d2442d32
  uses: orderlion/playwright-container@v3.0.2
  - name: Build Android App Fix
  # You may pin to the exact commit or the version.
  # uses: anime-vsub/android-build-action@7df9bcf5f18ca3f849ea5350ed1ce279ce389ced
  uses: anime-vsub/android-build-action@1.2.1
  with:
    # You can build an unsigned APK (assemble) or a signed AAB (bundle).
    build-type: # optional, default is assemble
    # Name of the gradle task to exec (eg. assembleDebug, assembleRelease, bundleRelease)
    gradle-task: # optional, default is assembleDebug
    # Increment build number
    increment-build-number: # optional
    # Package name
    package-name: # optional
    # Keystore file content as base64 encoded string
    keystore-content: # optional
    # Keystore password
    keystore-password: # optional
    # Keystore alias
    keystore-alias: # optional
    # JSON keystore file content
    json-key-data: # optional
    # Upload to Play Store
    upload-to-play-store: # optional
    # Project path
    project-path: 
    # Output path of the build
    output-path: # optional, default is output.apk
    # Boolean to tell the Action to upload the .ipa to Browserstack App Live after the build.
    browserstack-upload: # optional
    # Browserstack username (required if browserstack-upload == true)
    browserstack-username: # optional, default is 
    # Browserstack access key (required if browserstack-upload == true)
    browserstack-access-key: # optional, default is
    - name: Setup Go environment
  uses: actions/setup-go@v4.1.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    - name: Build Failure Analyser Action
  # You may pin to the exact commit or the version.
  # uses: Superbasil3/build-failure-analyser-action@1b2035ff45700ffc6a8a9d4560f02743970ed76e
  uses: Superbasil3/build-failure-analyser-action@v0.1.1
  with:
    # Where the log file is located, or a folder containing logs
    path-log-file: 
    # Token with access to update message, and read the database
    github-token: 
    # Url or local file path to the json file containing the regexes
    regexes-file-location: 
    - name: Zip Europa Universalis IV mod
  # You may pin to the exact commit or the version.
  # uses: maxice8/eu4-mod-zip@eecc141336384f3691f1f9e3dfdb9c3c8ac3ab0e
  uses: maxice8/eu4-mod-zip@v0.0.1
  with:
    # Name of the .mod descriptor file, .zip is prefixed to the end

    mod-name: 
    # Final name of the zip file. Defaults to the name of the mod if not present.

    zip-name: # optional, default is 
    # Name of the prefix directory. Defaults to the name of the mod if not present.

    prefix-name: # optional, default is 
    - name: Napptive Playground action
  # You may pin to the exact commit or the version.
  # uses: napptive-actions/playground-github-action@864dec9bdd1527f01cb5c7c56238b2259f22ff62
  uses: napptive-actions/playground-github-action@v6.4.0
  with:
    # Debug flag in commands
    debug: # optional
    # Command to execute
    cmd: 
    # To specify a target account/environment
    environment: # optional
    # To use a custom YAML file to change the target playground installation
    playgroundConfigFile: # optional
    - name: Get the next version code
  # You may pin to the exact commit or the version.
  # uses: mmachado53/google-play-next-version-code@18668ee47f77ba7f125257f18f63a966fc4c5529
  uses: mmachado53/google-play-next-version-code@v0.0.5
  with:
    # The json file of the service account private key to authorize access to google play console api data
    serviceAccountJsonFile: 
    # The package name, of the app
    packageName: 
    - name: React Native Android Build
  # You may pin to the exact commit or the version.
  # uses: AndreaMolinari/RNAndroidBuild@5df6d7123c53abad805e092a4806ce8ab5f65450
  uses: AndreaMolinari/RNAndroidBuild@v1.0.0
  with:
    # Package Name
    package-name: 
    # Android keystore base64
    KEYSTORE64: 
    # Android keystore password
    ANDROID_KEY_PASSWORD: 
    # Android keystore alias
    ANDROID_ALIAS: 
    # Android keystore alias password
    ANDROID_ALIAS_PASS: 
    # Token npm necessario se hai installato dei pacchetti privati
    NPM_TOKEN: # optional
    # Permette il deploy su Play Store
    SERVICE_ACCOUNT_JSON: # optional
    # Release channel -> internal|alpha|beta|production
    channel: # optional 
    - name: Azure-PlayFab Function Sync
  # You may pin to the exact commit or the version.
  # uses: rudyatkinson/azure-playfab-function-sync@7027dac7a0181b17feee974dc026e194a0ecf410
  uses: rudyatkinson/azure-playfab-function-sync@v1.1.0
  with:
    # The secret key required for register functions. You can obtain from PlayFab title.
    playfab-developer-secret-key: 
    # PlayFab title id that will be updated with function app urls.
    playfab-title-id: 
    # Subscription id which is includes function app.
    azure-subscription-id: 
    # Resource group name which is includes function app.
    azure-resource-group: 
    # The function app that will be uploaded.
    azure-function-app-name: 
    # Playfab functions which are does not contains at Azure function app will be unregistered.
    playfab-unregister-unused-functions: # optional
    # App Id that taken from azure portal is required to login with az cli in action.
    azure-login-app-id: # optional, default is 
    # Secret Value that taken from azure portal is required to login with az cli in action.
    azure-login-secret-value: # optional, default is 
    # Tenant Id that taken from azure portal is required to login with az cli in action.
    azure-login-tenant-id: # optional, default is 
    - name: cccc-action
  # You may pin to the exact commit or the version.
  # uses: sarnold/cccc-action@9a888120cc7d1c18fcf6a51c5bd6135190ed085c
  uses: sarnold/cccc-action@0.3
  with:
    # GITHUB_TOKEN secret < automatically provided by Github , you don't need to set up >
    github_token: 
    # Whether to commit the report files (else use upload-artifact)
    commit_report: # optional, default is 
    # Directory name for report (default is metrics)
    output_dir: # optional, default is metrics
    # Report type: xml | HTML (default is HTML)
    report_type: # optional, default is html
    # List of one or more directory names to search for source files (default is repository root)
    source_dirs: # optional, default is 
    # File extensions to search for (default uses built-in list)
    file_extensions: # optional, default is 
    # Source language (default is inferred from file extensions)
    language: # optional, default is 
    # Branch that the action will target. Defaults to the current branch.
    target_branch: # optional, default is 
    # Branch that the action will target on pull_request. Defaults to GITHUB_BASE_REF.
    pull_request_branch: # optional, default is 
    # Repository that the report will be pushed to. Defaults to the current repository.
    target_repository: # optional, default is 
    # Repository that the action will target on pull_request. Defaults to TARGET_REPOSITORY
    pull_request_repository: # optional, default is 
    - name: CCDC File Checks
  # You may pin to the exact commit or the version.
  # uses: ccdc-opensource/commit-hooks@c2ca16682e1b01675584491e9e81f78763bdfdcd
   runs-onjobs:
  my_job:
    name: deploy to staging
    runs-on: ubuntu-18.04
  uses: ccdc-opensource/commit-hooks@v6
  with:
    # The commit message
    commitMessage: 
    ubuntu-latest, ubuntu-18.04, or ubuntu-16.04

    name: Setup Node
  uses: actions/setup-node@v1
  with:
    node-version: '10.x'

    name: Install Dependencies
  run: npm install

  jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['8', '10', '12']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: npm install, build and test
      run: |
        npm install
        npm run build --if-present
        npm test

  - name: release-please-manifest-action
  # You may pin to the exact commit or the version.
  # uses: jimeh/release-please-manifest-action@9e6111fa063f5627650278aa216c00f4be48a317
  uses: jimeh/release-please-manifest-action@v1.0.2
  with:
    # GitHub token used to authenticate.
    token: # optional, default is ${{ github.token }}
    # ID of the GitHub App to use for authentication. If set, takes precedence over token input.
    app-id: # optional
    # Private key of the GitHub App (can be Base64 encoded). Required when app-id is provided.
    private-key: # optional
    # ID of the installation for which the app token will be requested. Defaults to the ID of the repository's installation.
    installation-id: # optional
    # JSON-stringified permissions granted to the app token. Defaults to all the GitHub app permissions, see: https://docs.github.com/en/rest/apps/apps#create-an-installation-access-token-for-an-app
    permissions: # optional
    # Configure github API URL.
    github-api-url: # optional, default is ${{ github.api_url }}
    # The full name of the repository to operate on in owner/repo format. Defaults to the current repository.
    repository: # optional, default is ${{ github.repository }}
    # Branch to open pull release PR against. Defaults to the repository's default branch.
    default-branch: # optional, default is 
    # Pat to config file within the project.
    config-file: # optional, default is .github/release-please-config.json
    # Path to manifest file within the project.
    manifest-file: # optional, default is .github/.release-please-manifest.json
